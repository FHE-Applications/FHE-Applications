cmake_minimum_required(VERSION 3.0 FATAL_ERROR)
project(FHE-LSTM)
set(CMAKE_CXX_STANDARD 17)
option(BUILD_STATIC "Set to ON to include static versions of the library" OFF)

# find_package(Torch REQUIRED)
find_package(OpenFHE CONFIG REQUIRED)
if (OpenFHE_FOUND)
    message(STATUS "FOUND PACKAGE OpenFHE")
    message(STATUS "OpenFHE Version: ${BASE_OPENFHE_VERSION}")
    message(STATUS "OpenFHE installed as shared libraries: ${OpenFHE_SHARED}")
    message(STATUS "OpenFHE include files location: ${OpenFHE_INCLUDE}")
    message(STATUS "OpenFHE lib files location: ${OpenFHE_LIBDIR}")
    message(STATUS "OpenFHE Native Backend size: ${OpenFHE_NATIVE_SIZE}")
    message(STATUS "OpenFHE CXX flags: ${OpenFHE_CXX_FLAGS}")
    message(STATUS "OpenFHE linker flags: ${OpenFHE_EXE_LINKER_FLAGS}")
else()
    message(FATAL_ERROR "PACKAGE OpenFHE NOT FOUND")
endif ()

set(CMAKE_CXX_FLAGS ${OpenFHE_CXX_FLAGS})
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wno-error") # negate Werror in OpenFHE CXX FLAGS
message("CMAKE_CXX_FLAGS: ${CMAKE_CXX_FLAGS}")

include_directories(${OPENMP_INCLUDES})
include_directories(${OpenFHE_INCLUDE})
include_directories(${OpenFHE_INCLUDE}/third-party/include)
include_directories(${OpenFHE_INCLUDE}/core)
include_directories(${OpenFHE_INCLUDE}/pke)
include_directories(${OpenFHE_INCLUDE}/binfhe)

link_directories(${OpenFHE_LIBDIR})
link_directories(${OPENMP_LIBRARIES})
if(BUILD_STATIC)
    set(CMAKE_EXE_LINKER_FLAGS "${OpenFHE_EXE_LINKER_FLAGS} -static")
    link_libraries(${OpenFHE_STATIC_LIBRARIES})
else()
    set(CMAKE_EXE_LINKER_FLAGS ${OpenFHE_EXE_LINKER_FLAGS})
    link_libraries(${OpenFHE_SHARED_LIBRARIES})
endif()

# add_executable(plaintext_inference plaintext_inference.cpp)
# add_executable(pt_to_bin pt_to_bin.cpp)
add_executable(LSTM fhe_inference.cpp)
# target_link_libraries(plaintext_inference "${TORCH_LIBRARIES}")
# target_link_libraries(pt_to_bin "${TORCH_LIBRARIES}")
## set_property(TARGET plaintext_inference PROPERTY CXX_STANDARD 17)
## set_property(TARGET fhe_inference PROPERTY CXX_STANDARD 17)
